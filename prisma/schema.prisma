datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String  @id @default(cuid())
  email       String  @unique
  displayName String?
  picture     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  events        Event[]
  contributions Contribution[]
  comments      Comment[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Event {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  name          String
  summary       String
  streetAddress String?
  unit          String?
  city          String?
  state         String?
  zip           String?
  dateTime      DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contributions Contribution[]
}

model Contribution {
  id String @id @default(cuid())

  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String?
  event   Event   @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  eventId String

  contributionName String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]
}

model Comment {
  id String @id @default(cuid())

  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String
  contribution   Contribution @relation(fields: [contributionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contributionId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post String
}
